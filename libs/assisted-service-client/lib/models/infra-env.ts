/* tslint:disable */
/* eslint-disable */
/**
 * AssistedInstall
 * Assisted installation
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ImageType } from './image-type';
import { Proxy } from './proxy';
/**
 * 
 * @export
 * @interface InfraEnv
 */
export interface InfraEnv {
    /**
     * Indicates the type of this object.
     * @type {string}
     * @memberof InfraEnv
     */
    kind: InfraEnvKindEnum;
    /**
     * Unique identifier of the object.
     * @type {string}
     * @memberof InfraEnv
     */
    id: string;
    /**
     * Self link.
     * @type {string}
     * @memberof InfraEnv
     */
    href: string;
    /**
     * Version of the OpenShift cluster (used to infer the RHCOS version - temporary until generic logic implemented).
     * @type {string}
     * @memberof InfraEnv
     */
    openshiftVersion?: string;
    /**
     * Name of the infra-env.
     * @type {string}
     * @memberof InfraEnv
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof InfraEnv
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof InfraEnv
     */
    orgId?: string;
    /**
     * 
     * @type {string}
     * @memberof InfraEnv
     */
    emailDomain?: string;
    /**
     * 
     * @type {Proxy}
     * @memberof InfraEnv
     */
    proxy?: Proxy;
    /**
     * A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.
     * @type {string}
     * @memberof InfraEnv
     */
    additionalNtpSources?: string;
    /**
     * SSH public key for debugging the installation.
     * @type {string}
     * @memberof InfraEnv
     */
    sshAuthorizedKey?: string;
    /**
     * True if the pull secret has been added to the cluster.
     * @type {boolean}
     * @memberof InfraEnv
     */
    pullSecretSet?: boolean;
    /**
     * static network configuration string in the format expected by discovery ignition generation.
     * @type {string}
     * @memberof InfraEnv
     */
    staticNetworkConfig?: string;
    /**
     * 
     * @type {ImageType}
     * @memberof InfraEnv
     */
    type: ImageType;
    /**
     * Json formatted string containing the user overrides for the initial ignition config.
     * @type {string}
     * @memberof InfraEnv
     */
    ignitionConfigOverride?: string;
    /**
     * If set, all hosts that register will be associated with the specified cluster.
     * @type {string}
     * @memberof InfraEnv
     */
    clusterId?: string;
    /**
     * 
     * @type {number}
     * @memberof InfraEnv
     */
    sizeBytes?: number;
    /**
     * 
     * @type {string}
     * @memberof InfraEnv
     */
    downloadUrl?: string;
    /**
     * Image generator version.
     * @type {string}
     * @memberof InfraEnv
     */
    generatorVersion?: string;
    /**
     * The last time that this infra-env was updated.
     * @type {Date}
     * @memberof InfraEnv
     */
    updatedAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof InfraEnv
     */
    createdAt: Date;
    /**
     * 
     * @type {Date}
     * @memberof InfraEnv
     */
    expiresAt?: Date;
    /**
     * The CPU architecture of the image (x86_64/arm64/etc).
     * @type {string}
     * @memberof InfraEnv
     */
    cpuArchitecture?: InfraEnvCpuArchitectureEnum;
    /**
     * JSON formatted string array representing the discovery image kernel arguments.
     * @type {string}
     * @memberof InfraEnv
     */
    kernelArguments?: string | null;
    /**
     * PEM-encoded X.509 certificate bundle. Hosts discovered by this infra-env will trust the certificates in this bundle. Clusters formed from the hosts discovered by this infra-env will also trust the certificates in this bundle.
     * @type {string}
     * @memberof InfraEnv
     */
    additionalTrustBundle?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum InfraEnvKindEnum {
    InfraEnv = 'InfraEnv'
}
/**
    * @export
    * @enum {string}
    */
export enum InfraEnvCpuArchitectureEnum {
    X8664 = 'x86_64',
    Aarch64 = 'aarch64',
    Arm64 = 'arm64',
    Ppc64le = 'ppc64le',
    S390x = 's390x'
}


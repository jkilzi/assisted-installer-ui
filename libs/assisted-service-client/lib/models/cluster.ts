/* tslint:disable */
/* eslint-disable */
/**
 * AssistedInstall
 * Assisted installation
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */
import { ApiVip } from './api-vip';
import { ClusterNetwork } from './cluster-network';
import { ClusterProgressInfo } from './cluster-progress-info';
import { DiskEncryption } from './disk-encryption';
import { Host } from './host';
import { HostNetwork } from './host-network';
import { IgnitionEndpoint } from './ignition-endpoint';
import { ImageInfo } from './image-info';
import { IngressVip } from './ingress-vip';
import { LogsState } from './logs-state';
import { MachineNetwork } from './machine-network';
import { MonitoredOperator } from './monitored-operator';
import { Platform } from './platform';
import { ServiceNetwork } from './service-network';
/**
 * 
 * @export
 * @interface Cluster
 */
export interface Cluster {
    /**
     * Indicates the type of this object. Will be 'Cluster' if this is a complete object, 'AddHostsCluster' for cluster that add hosts to existing OCP cluster, 
     * @type {string}
     * @memberof Cluster
     */
    kind: ClusterKindEnum;
    /**
     * Guaranteed availability of the installed cluster. 'Full' installs a Highly-Available cluster over multiple master nodes whereas 'None' installs a full cluster over one node. 
     * @type {string}
     * @memberof Cluster
     */
    highAvailabilityMode?: ClusterHighAvailabilityModeEnum;
    /**
     * Unique identifier of the object.
     * @type {string}
     * @memberof Cluster
     */
    id: string;
    /**
     * Self link.
     * @type {string}
     * @memberof Cluster
     */
    href: string;
    /**
     * Name of the OpenShift cluster.
     * @type {string}
     * @memberof Cluster
     */
    name?: string;
    /**
     * 
     * @type {string}
     * @memberof Cluster
     */
    userName?: string;
    /**
     * 
     * @type {string}
     * @memberof Cluster
     */
    orgId?: string;
    /**
     * 
     * @type {string}
     * @memberof Cluster
     */
    emailDomain?: string;
    /**
     * Version of the OpenShift cluster.
     * @type {string}
     * @memberof Cluster
     */
    openshiftVersion?: string;
    /**
     * OpenShift release image URI.
     * @type {string}
     * @memberof Cluster
     */
    ocpReleaseImage?: string;
    /**
     * Cluster ID on OCP system.
     * @type {string}
     * @memberof Cluster
     */
    openshiftClusterId?: string;
    /**
     * 
     * @type {ImageInfo}
     * @memberof Cluster
     */
    imageInfo: ImageInfo;
    /**
     * 
     * @type {Platform}
     * @memberof Cluster
     */
    platform?: Platform;
    /**
     * Base domain of the cluster. All DNS records must be sub-domains of this base and include the cluster name.
     * @type {string}
     * @memberof Cluster
     */
    baseDnsDomain?: string;
    /**
     * IP address block from which Pod IPs are allocated. This block must not overlap with existing physical networks. These IP addresses are used for the Pod network, and if you need to access the Pods from an external network, configure load balancers and routers to manage the traffic.
     * @type {string}
     * @memberof Cluster
     */
    clusterNetworkCidr?: string;
    /**
     * The subnet prefix length to assign to each individual node. For example, if clusterNetworkHostPrefix is set to 23, then each node is assigned a /23 subnet out of the given cidr (clusterNetworkCIDR), which allows for 510 (2^(32 - 23) - 2) pod IPs addresses. If you are required to provide access to nodes from an external network, configure load balancers and routers to manage the traffic.
     * @type {number}
     * @memberof Cluster
     */
    clusterNetworkHostPrefix?: number;
    /**
     * The IP address pool to use for service IP addresses. You can enter only one IP address pool. If you need to access the services from an external network, configure load balancers and routers to manage the traffic.
     * @type {string}
     * @memberof Cluster
     */
    serviceNetworkCidr?: string;
    /**
     * (DEPRECATED) The virtual IP used to reach the OpenShift cluster's API.
     * @type {string}
     * @memberof Cluster
     */
    apiVip?: string;
    /**
     * The virtual IPs used to reach the OpenShift cluster's API. Enter one IP address for single-stack clusters, or up to two for dual-stack clusters (at most one IP address per IP stack used). The order of stacks should be the same as order of subnets in Cluster Networks, Service Networks, and Machine Networks.
     * @type {Array<ApiVip>}
     * @memberof Cluster
     */
    apiVips?: Array<ApiVip> | null;
    /**
     * The domain name used to reach the OpenShift cluster API.
     * @type {string}
     * @memberof Cluster
     */
    apiVipDnsName?: string | null;
    /**
     * A CIDR that all hosts belonging to the cluster should have an interfaces with IP address that belongs to this CIDR. The api_vip belongs to this CIDR.
     * @type {string}
     * @memberof Cluster
     */
    machineNetworkCidr?: string;
    /**
     * (DEPRECATED) The virtual IP used for cluster ingress traffic.
     * @type {string}
     * @memberof Cluster
     */
    ingressVip?: string;
    /**
     * The virtual IPs used for cluster ingress traffic. Enter one IP address for single-stack clusters, or up to two for dual-stack clusters (at most one IP address per IP stack used). The order of stacks should be the same as order of subnets in Cluster Networks, Service Networks, and Machine Networks.
     * @type {Array<IngressVip>}
     * @memberof Cluster
     */
    ingressVips?: Array<IngressVip> | null;
    /**
     * SSH public key for debugging OpenShift nodes.
     * @type {string}
     * @memberof Cluster
     */
    sshPublicKey?: string;
    /**
     * A proxy URL to use for creating HTTP connections outside the cluster. http://\\<username\\>:\\<pswd\\>@\\<ip\\>:\\<port\\> 
     * @type {string}
     * @memberof Cluster
     */
    httpProxy?: string;
    /**
     * A proxy URL to use for creating HTTPS connections outside the cluster. http://\\<username\\>:\\<pswd\\>@\\<ip\\>:\\<port\\> 
     * @type {string}
     * @memberof Cluster
     */
    httpsProxy?: string;
    /**
     * A comma-separated list of destination domain names, domains, IP addresses, or other network CIDRs to exclude from proxying.
     * @type {string}
     * @memberof Cluster
     */
    noProxy?: string;
    /**
     * Status of the OpenShift cluster.
     * @type {string}
     * @memberof Cluster
     */
    status: ClusterStatusEnum;
    /**
     * Additional information pertaining to the status of the OpenShift cluster.
     * @type {string}
     * @memberof Cluster
     */
    statusInfo: string;
    /**
     * The last time that the cluster status was updated.
     * @type {Date}
     * @memberof Cluster
     */
    statusUpdatedAt?: Date;
    /**
     * 
     * @type {ClusterProgressInfo}
     * @memberof Cluster
     */
    progress?: ClusterProgressInfo;
    /**
     * 
     * @type {DiskEncryption}
     * @memberof Cluster
     */
    diskEncryption?: DiskEncryption;
    /**
     * Hosts that are associated with this cluster.
     * @type {Array<Host>}
     * @memberof Cluster
     */
    hosts?: Array<Host>;
    /**
     * hosts associated to this cluster that are in 'known' state.
     * @type {number}
     * @memberof Cluster
     */
    readyHostCount?: number;
    /**
     * hosts associated to this cluster that are not in 'disabled' state.
     * @type {number}
     * @memberof Cluster
     */
    enabledHostCount?: number;
    /**
     * All hosts associated to this cluster.
     * @type {number}
     * @memberof Cluster
     */
    totalHostCount?: number;
    /**
     * Schedule workloads on masters
     * @type {boolean}
     * @memberof Cluster
     */
    schedulableMasters?: boolean;
    /**
     * Indicates if schedule workloads on masters will be enabled regardless the value of 'schedulable_masters' property. Set to 'true' when not enough hosts are associated with this cluster to disable the scheduling on masters. 
     * @type {boolean}
     * @memberof Cluster
     */
    schedulableMastersForcedTrue?: boolean;
    /**
     * The last time that this cluster was updated.
     * @type {Date}
     * @memberof Cluster
     */
    updatedAt?: Date;
    /**
     * The time that this cluster was created.
     * @type {Date}
     * @memberof Cluster
     */
    createdAt?: Date;
    /**
     * The time that this cluster started installation.
     * @type {Date}
     * @memberof Cluster
     */
    installStartedAt?: Date;
    /**
     * The time that this cluster completed installation.
     * @type {Date}
     * @memberof Cluster
     */
    installCompletedAt?: Date;
    /**
     * List of host networks to be filled during query.
     * @type {Array<HostNetwork>}
     * @memberof Cluster
     */
    hostNetworks?: Array<HostNetwork> | null;
    /**
     * True if the pull secret has been added to the cluster.
     * @type {boolean}
     * @memberof Cluster
     */
    pullSecretSet?: boolean;
    /**
     * Indicate if virtual IP DHCP allocation mode is enabled.
     * @type {boolean}
     * @memberof Cluster
     */
    vipDhcpAllocation?: boolean | null;
    /**
     * JSON-formatted string containing the validation results for each validation id grouped by category (network, hosts-data, etc.)
     * @type {string}
     * @memberof Cluster
     */
    validationsInfo?: string;
    /**
     * 
     * @type {LogsState}
     * @memberof Cluster
     */
    logsInfo?: LogsState;
    /**
     * JSON-formatted string containing the user overrides for the install-config.yaml file.
     * @type {string}
     * @memberof Cluster
     */
    installConfigOverrides?: string;
    /**
     * 
     * @type {Date}
     * @memberof Cluster
     */
    controllerLogsCollectedAt?: Date;
    /**
     * 
     * @type {Date}
     * @memberof Cluster
     */
    controllerLogsStartedAt?: Date;
    /**
     * Json formatted string containing the majority groups for connectivity checks.
     * @type {string}
     * @memberof Cluster
     */
    connectivityMajorityGroups?: string;
    /**
     * Json formatted string containing ip collisions detected in the cluster.
     * @type {string}
     * @memberof Cluster
     */
    ipCollisions?: string;
    /**
     * Json formatted string containing a list of host validations to be ignored. May also contain a list with a single string \"all\" to ignore all host validations. Some validations cannot be ignored.
     * @type {string}
     * @memberof Cluster
     */
    ignoredHostValidations?: string;
    /**
     * Json formatted string containing a list of cluster validations to be ignored. May also contain a list with a single string \"all\" to ignore all cluster validations. Some validations cannot be ignored.
     * @type {string}
     * @memberof Cluster
     */
    ignoredClusterValidations?: string;
    /**
     * swagger:ignore
     * @type {any}
     * @memberof Cluster
     */
    deletedAt?: any;
    /**
     * Indicate if the networking is managed by the user.
     * @type {boolean}
     * @memberof Cluster
     */
    userManagedNetworking?: boolean | null;
    /**
     * A comma-separated list of NTP sources (name or IP) going to be added to all the hosts.
     * @type {string}
     * @memberof Cluster
     */
    additionalNtpSource?: string;
    /**
     * Operators that are associated with this cluster.
     * @type {Array<MonitoredOperator>}
     * @memberof Cluster
     */
    monitoredOperators?: Array<MonitoredOperator>;
    /**
     * Unique identifier of the AMS subscription in OCM.
     * @type {string}
     * @memberof Cluster
     */
    amsSubscriptionId?: string;
    /**
     * Enable/disable hyperthreading on master nodes, worker nodes, or all nodes
     * @type {string}
     * @memberof Cluster
     */
    hyperthreading?: ClusterHyperthreadingEnum;
    /**
     * JSON-formatted string containing the usage information by feature name
     * @type {string}
     * @memberof Cluster
     */
    featureUsage?: string;
    /**
     * The desired network type used.
     * @type {string}
     * @memberof Cluster
     */
    networkType?: ClusterNetworkTypeEnum;
    /**
     * Cluster networks that are associated with this cluster.
     * @type {Array<ClusterNetwork>}
     * @memberof Cluster
     */
    clusterNetworks?: Array<ClusterNetwork> | null;
    /**
     * Service networks that are associated with this cluster.
     * @type {Array<ServiceNetwork>}
     * @memberof Cluster
     */
    serviceNetworks?: Array<ServiceNetwork> | null;
    /**
     * Machine networks that are associated with this cluster.
     * @type {Array<MachineNetwork>}
     * @memberof Cluster
     */
    machineNetworks?: Array<MachineNetwork> | null;
    /**
     * The CPU architecture of the image (x86_64/arm64/etc).
     * @type {string}
     * @memberof Cluster
     */
    cpuArchitecture?: ClusterCpuArchitectureEnum;
    /**
     * 
     * @type {IgnitionEndpoint}
     * @memberof Cluster
     */
    ignitionEndpoint?: IgnitionEndpoint;
    /**
     * Indicates whether this cluster is an imported day-2 cluster or a regular cluster. Clusters are considered imported when they are created via the ../clusters/import endpoint. Day-2 clusters converted from day-1 clusters by kube-api controllers or the ../clusters/<cluster_id>/actions/allow-add-hosts endpoint are not considered imported. Imported clusters usually lack a lot of information and are filled with default values that don't necessarily reflect the actual cluster they represent
     * @type {boolean}
     * @memberof Cluster
     */
    imported?: boolean;
    /**
     * A comma-separated list of tags that are associated to the cluster.
     * @type {string}
     * @memberof Cluster
     */
    tags?: string;
}

/**
    * @export
    * @enum {string}
    */
export enum ClusterKindEnum {
    Cluster = 'Cluster',
    AddHostsCluster = 'AddHostsCluster'
}
/**
    * @export
    * @enum {string}
    */
export enum ClusterHighAvailabilityModeEnum {
    Full = 'Full',
    None = 'None'
}
/**
    * @export
    * @enum {string}
    */
export enum ClusterStatusEnum {
    Insufficient = 'insufficient',
    Ready = 'ready',
    Error = 'error',
    PreparingForInstallation = 'preparing-for-installation',
    PendingForInput = 'pending-for-input',
    Installing = 'installing',
    Finalizing = 'finalizing',
    Installed = 'installed',
    AddingHosts = 'adding-hosts',
    Cancelled = 'cancelled',
    InstallingPendingUserAction = 'installing-pending-user-action'
}
/**
    * @export
    * @enum {string}
    */
export enum ClusterHyperthreadingEnum {
    Masters = 'masters',
    Workers = 'workers',
    All = 'all',
    None = 'none'
}
/**
    * @export
    * @enum {string}
    */
export enum ClusterNetworkTypeEnum {
    OpenShiftSDN = 'OpenShiftSDN',
    OVNKubernetes = 'OVNKubernetes'
}
/**
    * @export
    * @enum {string}
    */
export enum ClusterCpuArchitectureEnum {
    X8664 = 'x86_64',
    Aarch64 = 'aarch64',
    Arm64 = 'arm64',
    Ppc64le = 'ppc64le',
    S390x = 's390x',
    Multi = 'multi'
}

